#  Шифрованиe RSA посредством Китайской теоремы об остатках

N1 = 431972773933
N2 = 432558060211
N3 = 434276528083
e = 3
C1 = [43268974598,
    302331913599,
    47134049761,
    126642563008,
    165827503054,
    232086597542,
    31465887151,
    30373336865,
    284998624093,
    89084365158,
    322533676789,
    383736009455,
    108545189851
]
C2 = [330701159000,
    104807592171,
    45038416117,
    81063981859,
    427734601871,
    27505991527,
    81910363197,
    190166502949,
    116404011104,
    249933949107,
    90486698466,
    206265723002,
    276536042468
]
C3 = [269237460393,
    165034165638,
    207280715083,
    151936477226,
    7495879547,
    141105308724,
    316939568874,
    360819196331,
    46940627813,
    137301580237,
    168518778628,
    113124777920,
    282998095133
]

# N1 = 363542076673
# N2 = 728740902979
# N3 = 522993716719
# e = 3
# C1 = [246562834516]
# C2 = [291375746601]
# C3 = [222724269731]

print("Входные данные:")
print(f'N1 = {N1}')
print(f'N2 = {N2}')
print(f'N3 = {N3}')
print(f'e = {e}')
print(f'C1 = {C1}')
print(f'C2 = {C2}')
print(f'C3 = {C3}\n')


M0 = N1 * N2 * N3
m1 = N2 * N3
m2 = N1 * N3
m3 = N1 * N2

n1 = pow(m1,-1,N1)
n2 = pow(m2,-1,N2)
n3 = pow(m3,-1,N3)

print("Основные показатели:")
print(f'M0 = {M0}')
print(f'm1 = {m1}')
print(f'm2 = {m2}')
print(f'm3 = {m3}')
print(f'n1 = {n1}')
print(f'n2 = {n2}')
print(f'n3 = {n3}\n')


text = ''
for i in range(0, len(C1)):
    S = C1[i]*n1*m1 + C2[i]*n2*m2 + C3[i]*n3*m3
    S_mod = S % M0
    M = round( S_mod**(1/e))
    code = M.to_bytes(4,'big')
    block = code.decode('cp1251') # другой не декодит
    text += block 
    if i<=2:
        print(f"Промежуточные вычисления блока № {i+1}:")
        print(f'S = {S}')
        print(f'M = {M}')
    print(f'block{i+1} : {block}\n')

print("Полностью расшифрованный текст:")
print(text)